{"version":3,"file":"static/js/222.80151326.chunk.js","mappings":"wOACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAsF,uBAAtF,EAA4L,gC,sCCK/KA,EAAY,WACvB,MAAwBC,EAAAA,SAAe,IAAvC,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,EAAAA,SAAe,IAAnD,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SASpCT,EAAAA,WAAgB,WACd,IAAMU,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAmBH,GAF3B,OAERI,EAFQ,OAGdR,EAAcQ,GAHA,uDAKdC,QAAQC,IAAR,MALc,kBAMPC,MAAM,4BANC,yDAAH,qDASXP,GACFE,MAED,CAACF,IAMJ,OACE,iCACE,kBAAMQ,SA5BW,SAAAC,GAEnB,GADAA,EAAMC,kBACDjB,EAAM,OAAOc,MAAM,iBACxBR,EAAgB,CAAEY,MAAOlB,IACzBC,EAAQ,KAwBwBkB,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLrB,KAAK,OACLsB,MAAOtB,EACPuB,SAXa,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCrB,EAAQqB,IAWFH,UAAWC,KAGb,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,uBAIDlB,EAAWuB,QACV,SAACC,EAAA,EAAD,CAAYC,OAAQzB,IAClBK,GACF,gBAAIY,UAAWC,EAAf,qCAC2Bb,MAG3B,eAAIY,UAAWC,EAAf,qCChDR,EARe,WACb,OACE,0BACE,SAACtB,EAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/index.jsx","pages/Movies/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\",\"btn\":\"Searchbar_btn__MFSUa\",\"item\":\"Searchbar_item__YPU6d\",\"title\":\"Searchbar_title__jaMqM\",\"notification\":\"Searchbar_notification__FvvcB\"};","import styles from './Searchbar.module.css';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport fetchSearchedMovie from '../../helpers/index';\nimport { MoviesList } from 'components/MoviesList';\n\nexport const Searchbar = () => {\n  const [name, setName] = React.useState('');\n  const [searchFilm, setSearchFilm] = React.useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const backSearch = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name) return alert('invalid input');\n    setSearchParams({ query: name });\n    setName('');\n  };\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const results = await fetchSearchedMovie(backSearch);\n        setSearchFilm(results);\n      } catch (error) {\n        console.log(error);\n        return alert('failed to retrieve data');\n      }\n    };\n    if (backSearch) {\n      fetchData();\n    }\n  }, [backSearch]);\n\n  const handleChange = ({ target: { value } }) => {\n    setName(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.btn}>\n          Search\n        </button>\n      </form>\n      {searchFilm.length ? (\n        <MoviesList movies={searchFilm} />\n      ) : backSearch ? (\n        <h3 className={styles.notification}>\n          No movies found by this {backSearch}\n        </h3>\n      ) : (\n        <h3 className={styles.notification}>enter a movie title</h3>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport {Searchbar} from '../../components/Searchbar'\n\nconst Movies = () => {\n  return (\n    <div>\n      <Searchbar />\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["Searchbar","React","name","setName","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","backSearch","get","fetchData","fetchSearchedMovie","results","console","log","alert","onSubmit","event","preventDefault","query","className","styles","type","value","onChange","target","length","MoviesList","movies"],"sourceRoot":""}