{"version":3,"file":"static/js/874.20777301.chunk.js","mappings":"2MACA,GAAgB,IAAM,8BAA8B,KAAO,+BAA+B,UAAY,oCAAoC,IAAM,8BAA8B,MAAQ,gCAAgC,OAAS,iCAAiC,YAAc,uC,SCgE9Q,EA3DyB,SAAC,GAAe,IAAD,EAAZA,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,EAAAA,OAAA,UAAaH,EAASI,aAAtB,aAAa,EAAgBC,MAEvCC,EAAcC,KAAKC,MAA2B,GAArBX,EAAMY,cAKrC,OACE,iCACE,mBAAQC,KAAK,SAASC,QALN,WAClBb,EAASI,EAAQU,QAAS,CAAEC,SAAS,KAISC,UAAWC,EAAAA,IAAvD,sBAGA,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,gBACEC,IACE,OAACnB,QAAD,IAACA,GAAAA,EAAOoB,WAAR,yCAEsCpB,EAAMoB,YADxC,4DAGNC,IAAG,UAAKrB,EAAMsB,OACdL,UAAWC,EAAAA,OAEb,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGlB,EAAMsB,OACP,gCAAQtB,EAAMuB,aAAd,WAEF,wCAAgBd,EAAhB,QACA,sCACA,cAAGQ,UAAWC,EAAAA,YAAd,SAAmClB,EAAMwB,YACzC,eAAIP,UAAWC,EAAAA,KAAf,qBACA,eAAID,UAAWC,EAAAA,OAAf,SACGlB,EAAMyB,QACLzB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetailsCard/MovieDetailsCard.module.css?4e6c","pages/MovieDetails/MovieDetailsCard/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetailsCard_btn__MSYcK\",\"card\":\"MovieDetailsCard_card__lYHX8\",\"card_info\":\"MovieDetailsCard_card_info__UOVoh\",\"img\":\"MovieDetailsCard_img__qBg2T\",\"title\":\"MovieDetailsCard_title__1mw65\",\"genres\":\"MovieDetailsCard_genres__r5PkI\",\"description\":\"MovieDetailsCard_description__hlqG9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport styles from './MovieDetailsCard.module.css';\n\nconst MovieDetailsCard = ({ movie }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const fromRef = React.useRef(location.state?.from);\n\n  const voteAverage = Math.floor(movie.vote_average * 10);\n\n  const handleClick = () => {\n    navigate(fromRef.current, { replace: false });\n  };\n  return (\n    <>\n      <button type=\"button\" onClick={handleClick} className={styles.btn}>\n        Go back\n      </button>\n      <div className={styles.card}>\n        <img\n          src={\n            !movie?.poster_url\n              ? 'https://www.123rf.com/stock-photo/no_image_available.html'\n              : `https://image.tmdb.org/t/p/w500${movie.poster_url}`\n          }\n          alt={`${movie.title}`}\n          className={styles.img}\n        />\n        <div className={styles.card_info}>\n          <h1 className={styles.title}>\n            {movie.title}\n            <span>({movie.release_year})</span>\n          </h1>\n          <p>User score: {voteAverage}%</p>\n          <h3>Overview</h3>\n          <p className={styles.description}>{movie.overview}</p>\n          <h3 className={styles.text}>Genres</h3>\n          <ul className={styles.genres}>\n            {movie.genres &&\n              movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieDetailsCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_url: PropTypes.string,\n    overview: PropTypes.string,\n    release_year: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetailsCard;\n"],"names":["movie","navigate","useNavigate","location","useLocation","fromRef","React","state","from","voteAverage","Math","floor","vote_average","type","onClick","current","replace","className","styles","src","poster_url","alt","title","release_year","overview","genres","map","genre","name","id"],"sourceRoot":""}